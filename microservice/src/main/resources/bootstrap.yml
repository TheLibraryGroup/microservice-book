server:
    port: ${SERVER_PORT}
#  servlet:
#    context-path: /api/

spring:
    application:
        name: book
    profiles:
        active: docker
    cloud:
        config:
            profile: dev
            uri: ${SPRING_CLOUD_CONFIG_URI}
            username: ${SPRING_CLOUD_CONFIG_USERNAME}
            password: ${SPRING_CLOUD_CONFIG_PWD}
        discovery:
            enabled: true
    rabbitmq:
        host: localhost
        username: user
        password: user
    ##                    TO GET KEYCLOAK ENDPOINTS : http://localhost:8080/auth/realms/TheLibrary/.well-known/openid-configuration
    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: https://www.auth.thelibrary.mypoc.online/auth/realms/TheLibrary
    zipkin:
        base-url: ${SPRING_ZIPKIN_URL}
#  boot:
#    admin:
#      client:
#        instance:
#          management-url: /api/
#          service-base-url: /api/
#        api-path: /api/
#        url: http://localhost:8010/MONITORING/
#    data:
#        elasticsearch:
#            repositories:
#                enabled: true
#                    jwk-set-uri: https://www.auth.thelibrary.mypoc.online/auth/realms/TheLibrary/protocol/openid-connect/certs

eureka:
    instance:
        leaseRenewalIntervalInSeconds: 10
        leaseExpirationDurationInSeconds: 2
        health-check-url-path: /actuator/health
        metadata-map:
            startup: ${random.int}    #needed to trigger info and endpoint update after restart
    client:
        registryFetchIntervalSeconds: 5
        serviceUrl:
            defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
        healthcheck:
            enabled: true

hystrix:
    metrics:
        polling-interval-ms: 3000
        enabled: true

management:

    health:
        elasticsearch:
            enabled: false
    endpoint:
        health:
            show-details: always
        hystrix:
            stream:
                enabled: true
    endpoints:
        web:
            exposure:
                #                include: hystrix.stream, health, info
                include: "*"

logging:
    level:
        org:
            hibernate:
                SQL: DEBUG
                type:
                    descriptor:
                        sql:
                            BasicBinder: TRACE
    file:
        path: .
        name: ${spring.application.name}.log

