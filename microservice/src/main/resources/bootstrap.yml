
server:
    port: ${SERVER-PORT}
    servlet:
        context-path: /api/

spring:
    application:
        name: thelibrary-ms-book
    profiles:
        active: docker
    cloud:
        config:
            profile: dev
            uri: ${SPRING-CLOUD-CONFIG-URI}
            username: ${SPRING-CLOUD-CONFIG-USERNAME}
            password: ${SPRING-CLOUD-CONFIG-PWD}
        discovery:
            enabled: true
#    data:
#        rest:
#            return-body-on-create: true
#            return-body-on-update: true
    rabbitmq:
        host: localhost
        username: user
        password: user
##                    TO GET KEYCLOAK ENDPOINTS : http://localhost:8080/auth/realms/TheLibrary/.well-known/openid-configuration
    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: https://www.auth.thelibrary.mypoc.online/auth/realms/TheLibrary
#                    jwk-set-uri: http://localhost:8080/auth/realms/TheLibrary/.well-known/openid-configuration
#                    jwk-set-uri: https://www.auth.thelibrary.mypoc.online/auth/realms/TheLibrary/protocol/openid-connect/certs

eureka:
    client:
        serviceUrl:
            defaultZone: ${EUREKA-CLIENT-SERVICEURL-DEFAULTZONE}


management:
    endpoints:
        web:
            exposure:
                include: "*"

logging:
    level:
        org:
            hibernate:
                SQL: DEBUG
                type:
                    descriptor:
                        sql:
                            BasicBinder: TRACE
